syntax = "proto3";
package gwpb;

option go_package = "pkg/gwpb";
option optimize_for = LITE_RUNTIME;

// Address is used to represent an address.  Since we might have to deal
// with multiple technologies we have to be able to represent different
// kinds of addresses.  ipv4 and ipv6 are pretty self explanatory.  b32 and 
// b64 is just a generic 32 and 64 bit addresses respectively.  These can be 
// used to represent non-IP addresses of different kinds or even node IDs.
//
// If the address refers to a node ID the gateway may have to maintain a
// mapping between the node ID and whatever network address the local
// network uses.  Keep in mind that the address is supposed to allow the
// server end to route messages to a given device (or, if the address is
// the boolean broadcast, all devices reachable from the gateway)
message Address {
	// network address
	oneof addr {
		// IPv4 address
		fixed32 ipv4 = 5;
		// IPv6 address
		bytes   ipv6 = 6;
		// Generic 32 bit address
		fixed32 b32  = 7;
		// Generic 64 bit address
		fixed64 b64  = 8;
		// String address
		string name = 9;
		// Indicate that the address is equivalent to a broadcast
		bool broadcast = 10; 
	}
}

// Value is a generic value that can be of various types.
message Value {
	oneof value {
		uint64 uint64_val = 4;
		uint32 uint32_val = 5;
		int64  int64_val  = 6;
		int32  int32_val  = 7;
		float  float_val  = 8;
		string string_val = 9;
		bytes  bytes_val  = 10;
	}
}
